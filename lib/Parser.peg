@namespace Calculon
@classname Parser
@using System.Globalization
@using Calculon.Types

item <ICalculonType>
    = literal
    / number
    / op
    / exit

literal <Literal>
    = value:("\"" [A-Za-z0-9_]+ "\"") { new Literal(value) }

op <ICalculonType>
    = addop
    / subop
    / multop
    / divop

addop <AddOp>
    = ("+") { new AddOp() }

subop <SubOp>
    = ("-") { new SubOp() }

multop <MultOp>
    = ("*") { new MultOp() }

divop <DivOp>
    = ("/") { new DivOp() }

exit <ExitType>
    = ("exit"i) { new ExitType() }
    / ("quit"i) { new ExitType() }

number <ICalculonType>
    = decimal
    / integer

decimal <Real>
    = value:([0-9]+ ("." [0-9]+)) { new Real(value) }

integer <Integer>
    = value:([0-9]+) { new Integer(util.Concat(value)) }
