@namespace Calculon
@classname Parser
@using System.Globalization
@using Calculon.Types

item <ICalculonType>
    = literal
    / number
    / function

literal <Literal>
    = value:("\"" [A-Za-z0-9_]+ "\"") { new Literal(value) }

function <FunctionInstance>
    = value:([A-Za-z0-9_\+\-\*\/\!\^]+) {FunctionFactory.Instance[util.Concat(value)]}

number <ICalculonType>
    = decimal
    / rational
    / integer
    / realconstant

decimal <Real>
    = value:("-"*[0-9]+ ("." [0-9]+)) { new Real(value) }

rational <Rational>
    = value:("-"*[0-9]+ ("/" [1-9]+)) { new Rational(value) }

// # note order is vitally important below.
integer <Integer>
    = value:("-"*[0-9A-Fa-f]+"h"i) { new Integer(value.TrimEnd(value[value.Length - 1]), Integer.Base.Hex) }
    / value:("-"*[0-9]+"d"i) { new Integer(value.TrimEnd(value[value.Length - 1]), Integer.Base.Dec) }
    / value:("-"*[0-7]+"o"i) { new Integer(value.TrimEnd(value[value.Length - 1]), Integer.Base.Oct) }
    / value:("-"*[0-1]+"b"i) { new Integer(value.TrimEnd(value[value.Length - 1]), Integer.Base.Bin) }
    / value:("-"*[0-9]+) { new Integer(value) }

realconstant <RealConstant>
    = ("pi"i<1>!([A-Za-z0-9_]+)) { new RealConstant(RealConstant.Constant.pi) }
    / ("e"i<1>!([A-Za-z0-9_]+)) { new RealConstant(RealConstant.Constant.e) }
    / ("tau"i<1>!([A-Za-z0-9_]+)) { new RealConstant(RealConstant.Constant.tau) }
    